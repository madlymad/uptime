apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.oss.licenses.plugin'
apply plugin: 'io.fabric'

// import gradle scripts
apply from: rootProject.file('buildsystem' + File.separator + 'private' + File.separator + 'private.gradle')
apply from: rootProject.file('buildsystem' + File.separator + 'methods.gradle')
apply from: rootProject.file('buildsystem' + File.separator + 'ci-helper.gradle')
// Add methods for adb standby and doze testing
apply from: rootProject.file('buildsystem' + File.separator + 'device.gradle')

android {
    signingConfigs {
        config {
            keyAlias appConfig["keyAlias"]
            keyPassword appConfig["keyPassword"]
            storeFile file(appConfig["storeFile"])
            storePassword appConfig["storePassword"]
        }
    }
    compileSdkVersion appSdkVersion
    buildToolsVersion appBuildToolsVersion
    defaultConfig {
        applicationId applicationPackageId
        minSdkVersion appMinSdkVersion
        targetSdkVersion appSdkVersion
        versionCode applicationVersionCode
        versionName applicationVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
    }

    // This enables long timeouts required on slow environments, e.g. Travis
    adbOptions {
        timeOutInMs 10 * 60 * 1000  // 10 minutes
        installOptions "-d", "-t"
    }
}

dependencies {
    //implementation fileTree(include: ['*.jar'], dir: 'libs')

    // App's dependencies, including test
    implementation 'com.android.support:support-annotations:27.1.1'

    // Google support components
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:preference-v7:27.1.1'
    implementation 'com.android.support:preference-v14:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

    // Firebase and Crashlytics dependencies, also covers the analytics part
    implementation 'com.google.gms:google-services:3.2.0'
    // https://docs.fabric.io/android/changelog.html#crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.2'
    implementation('com.google.firebase:firebase-core:15.0.0') {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }

    // Open Source Notices
    implementation 'com.google.android.gms:play-services-oss-licenses:15.0.1'

    // For permissions
    implementation 'gun0912.ted:tedpermission:2.1.0'

    // Job Scheduler
    implementation 'com.evernote:android-job:1.2.5'

    testImplementation 'junit:junit:4.12'

    // Testing-only dependencies
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

    androidTestUtil 'com.android.support.test:orchestrator:1.0.2'
}

// Apply the static analysis tools
apply from: rootProject.file('buildsystem' + File.separator + 'static-analysis.gradle')

// This should be at the bottom, in order to grab all project dependencies
apply plugin: 'com.google.gms.google-services'
